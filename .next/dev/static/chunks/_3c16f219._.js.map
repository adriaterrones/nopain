{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Adri%C3%A0/nopain/app/providers/ThemeProvider.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { ThemeProvider as NextThemesProvider } from 'next-themes'\r\nimport { type ThemeProviderProps } from 'next-themes/dist/types'\r\n\r\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\r\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAKO,SAAS,cAAc,EAAE,QAAQ,EAAE,GAAG,OAA2B;IACtE,qBAAO,6LAAC,oKAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC;KAFgB","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Adri%C3%A0/nopain/app/components/ThemeToggle.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useTheme } from 'next-themes'\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport function ThemeToggle() {\r\n  const { theme, setTheme } = useTheme()\r\n  const [mounted, setMounted] = useState(false)\r\n\r\n  useEffect(() => setMounted(true), [])\r\n  if (!mounted) return null\r\n\r\n  return (\r\n    <button\r\n      onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}\r\n      className=\"rounded-full p-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 transition\"\r\n      title=\"Cambiar tema\"\r\n    >\r\n      {theme === 'dark' ? 'ðŸŒž' : 'ðŸŒ™'}\r\n    </button>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAKO,SAAS;;IACd,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAA,+JAAQ;IACpC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IAEvC,IAAA,0KAAS;iCAAC,IAAM,WAAW;gCAAO,EAAE;IACpC,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,6LAAC;QACC,SAAS,IAAM,SAAS,UAAU,SAAS,UAAU;QACrD,WAAU;QACV,OAAM;kBAEL,UAAU,SAAS,OAAO;;;;;;AAGjC;GAhBgB;;QACc,+JAAQ;;;KADtB","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Adri%C3%A0/nopain/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Adri%C3%A0/nopain/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ToastProvider = ToastPrimitives.Provider\r\n\r\n/* âœ… Viewport: centrado absoluto y sin expandirse */\r\nconst ToastViewport = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Viewport\r\n    ref={ref}\r\n    className={cn(\r\n      // Vista completa, centrada horizontalmente\r\n      \"fixed top-6 inset-x-0 z-[100] flex justify-center p-4 pointer-events-none\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\r\n\r\n/* Estilos base */\r\nconst toastVariants = cva(\r\n  \"group relative flex items-center justify-between space-x-4 overflow-hidden rounded-lg border p-4 pr-6 shadow-lg transition-all \" +\r\n    \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-80 data-[state=open]:fade-in-80\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 border-gray-200 dark:border-gray-800\",\r\n        success: \"bg-green-600 text-white border-green-700\",\r\n        destructive: \"bg-red-600 text-white border-red-700\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\n/* âœ… Toast individual: ancho fijo y centrado */\r\nconst Toast = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\r\n    VariantProps<typeof toastVariants>\r\n>(({ className, variant, ...props }, ref) => (\r\n  <ToastPrimitives.Root\r\n    ref={ref}\r\n    className={cn(\r\n      toastVariants({ variant }),\r\n      \"pointer-events-auto max-w-[420px] w-auto mx-auto\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nToast.displayName = ToastPrimitives.Root.displayName\r\n\r\n/* Subcomponentes */\r\nconst ToastTitle = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Title>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Title\r\n    ref={ref}\r\n    className={cn(\"text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nToastTitle.displayName = ToastPrimitives.Title.displayName\r\n\r\nconst ToastDescription = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Description>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm opacity-90\", className)}\r\n    {...props}\r\n  />\r\n))\r\nToastDescription.displayName = ToastPrimitives.Description.displayName\r\n\r\nconst ToastClose = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Close>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Close\r\n    ref={ref}\r\n    className={cn(\r\n      \"absolute right-2 top-2 rounded-md p-1 text-gray-700 dark:text-gray-300 opacity-0 transition-opacity hover:text-foreground \" +\r\n        \"focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100\",\r\n      className\r\n    )}\r\n    toast-close=\"\"\r\n    {...props}\r\n  >\r\n    âœ•\r\n  </ToastPrimitives.Close>\r\n))\r\nToastClose.displayName = ToastPrimitives.Close.displayName\r\n\r\nexport {\r\n  ToastProvider,\r\n  ToastViewport,\r\n  Toast,\r\n  ToastTitle,\r\n  ToastDescription,\r\n  ToastClose,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,gBAAgB,gLAAwB;AAE9C,kDAAkD,GAClD,MAAM,8BAAgB,2KAAgB,MAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,gLAAwB;QACvB,KAAK;QACL,WAAW,IAAA,qHAAE,EACX,2CAA2C;QAC3C,6EACA;QAED,GAAG,KAAK;;;;;;;AAGb,cAAc,WAAW,GAAG,gLAAwB,CAAC,WAAW;AAEhE,gBAAgB,GAChB,MAAM,gBAAgB,IAAA,0KAAG,EACvB,oIACE,6HACF;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,SAAS;YACT,aAAa;QACf;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,6CAA6C,GAC7C,MAAM,sBAAQ,2KAAgB,OAI5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC,4KAAoB;QACnB,KAAK;QACL,WAAW,IAAA,qHAAE,EACX,cAAc;YAAE;QAAQ,IACxB,oDACA;QAED,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,4KAAoB,CAAC,WAAW;AAEpD,kBAAkB,GAClB,MAAM,2BAAa,2KAAgB,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,6KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,6KAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,2KAAgB,OAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,qHAAE,EAAC,sBAAsB;QACnC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,mLAA2B,CAAC,WAAW;AAEtE,MAAM,2BAAa,2KAAgB,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,6KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,qHAAE,EACX,+HACE,6EACF;QAEF,eAAY;QACX,GAAG,KAAK;kBACV;;;;;;;AAIH,WAAW,WAAW,GAAG,6KAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Adri%C3%A0/nopain/components/ui/use-toast.ts"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\n\r\nconst TOAST_LIMIT = 1\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = {\r\n  id: string\r\n  title?: React.ReactNode\r\n  description?: React.ReactNode\r\n  action?: React.ReactNode\r\n  variant?: \"default\" | \"destructive\"\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\nconst listeners = new Set<(toasts: ToasterToast[]) => void>()\r\nlet toasts: ToasterToast[] = []\r\n\r\nfunction dispatch(action: { type: \"ADD\" | \"REMOVE\"; toast?: ToasterToast }) {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      if (action.toast) {\r\n        toasts = [action.toast, ...toasts].slice(0, TOAST_LIMIT)\r\n        listeners.forEach((listener) => listener(toasts))\r\n      }\r\n      break\r\n    case \"REMOVE\":\r\n      if (action.toast) {\r\n        toasts = toasts.filter((t) => t.id !== action.toast!.id)\r\n        listeners.forEach((listener) => listener(toasts))\r\n      }\r\n      break\r\n  }\r\n}\r\n\r\nexport function useToast() {\r\n  const [state, setState] = React.useState<ToasterToast[]>(toasts)\r\n\r\n  React.useEffect(() => {\r\n    const listener = (newToasts: ToasterToast[]) => setState(newToasts)\r\n    listeners.add(listener)\r\n    return () => {\r\n      listeners.delete(listener)\r\n    }\r\n  }, [])\r\n\r\n  const toast = React.useCallback((toast: Omit<ToasterToast, \"id\">) => {\r\n    const id = Math.random().toString(36).substring(2, 9)\r\n    const newToast = { id, ...toast }\r\n    dispatch({ type: \"ADD\", toast: newToast })\r\n    toastTimeouts.set(\r\n      id,\r\n      setTimeout(() => dispatch({ type: \"REMOVE\", toast: newToast }), TOAST_REMOVE_DELAY)\r\n    )\r\n  }, [])\r\n\r\n  return { toasts: state, toast }\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;;AAFA;;AAIA,MAAM,cAAc;AACpB,MAAM,qBAAqB;AAU3B,MAAM,gBAAgB,IAAI;AAC1B,MAAM,YAAY,IAAI;AACtB,IAAI,SAAyB,EAAE;AAE/B,SAAS,SAAS,MAAwD;IACxE,OAAQ,OAAO,IAAI;QACjB,KAAK;YACH,IAAI,OAAO,KAAK,EAAE;gBAChB,SAAS;oBAAC,OAAO,KAAK;uBAAK;iBAAO,CAAC,KAAK,CAAC,GAAG;gBAC5C,UAAU,OAAO,CAAC,CAAC,WAAa,SAAS;YAC3C;YACA;QACF,KAAK;YACH,IAAI,OAAO,KAAK,EAAE;gBAChB,SAAS,OAAO,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO,KAAK,CAAE,EAAE;gBACvD,UAAU,OAAO,CAAC,CAAC,WAAa,SAAS;YAC3C;YACA;IACJ;AACF;AAEO,SAAS;;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,yKAAc,CAAiB;IAEzD,0KAAe;8BAAC;YACd,MAAM;+CAAW,CAAC,YAA8B,SAAS;;YACzD,UAAU,GAAG,CAAC;YACd;sCAAO;oBACL,UAAU,MAAM,CAAC;gBACnB;;QACF;6BAAG,EAAE;IAEL,MAAM,QAAQ,4KAAiB;uCAAC,CAAC;YAC/B,MAAM,KAAK,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG;YACnD,MAAM,WAAW;gBAAE;gBAAI,GAAG,KAAK;YAAC;YAChC,SAAS;gBAAE,MAAM;gBAAO,OAAO;YAAS;YACxC,cAAc,GAAG,CACf,IACA;+CAAW,IAAM,SAAS;wBAAE,MAAM;wBAAU,OAAO;oBAAS;8CAAI;QAEpE;sCAAG,EAAE;IAEL,OAAO;QAAE,QAAQ;QAAO;IAAM;AAChC;GAtBgB","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Adri%C3%A0/nopain/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport {\r\n  Toast,\r\n  ToastClose,\r\n  ToastDescription,\r\n  ToastProvider,\r\n  ToastTitle,\r\n  ToastViewport,\r\n} from \"@/components/ui/toast\"\r\nimport { useToast } from \"@/components/ui/use-toast\"\r\n\r\nexport function Toaster() {\r\n  const { toasts } = useToast()\r\n\r\n  return (\r\n    <ToastProvider>\r\n      {toasts.map(function ({ id, title, description, action, ...props }) {\r\n        return (\r\n          <Toast key={id} {...props}>\r\n            <div className=\"grid gap-1\">\r\n              {title && <ToastTitle>{title}</ToastTitle>}\r\n              {description && (\r\n                <ToastDescription>{description}</ToastDescription>\r\n              )}\r\n            </div>\r\n            {action}\r\n            <ToastClose />\r\n          </Toast>\r\n        )\r\n      })}\r\n\r\n      <ToastViewport />\r\n    </ToastProvider>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAQA;;;AAVA;;;AAYO,SAAS;;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,IAAA,+IAAQ;IAE3B,qBACE,6LAAC,8IAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,6LAAC,sIAAK;oBAAW,GAAG,KAAK;;sCACvB,6LAAC;4BAAI,WAAU;;gCACZ,uBAAS,6LAAC,2IAAU;8CAAE;;;;;;gCACtB,6BACC,6LAAC,iJAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,6LAAC,2IAAU;;;;;;mBARD;;;;;YAWhB;0BAEA,6LAAC,8IAAa;;;;;;;;;;;AAGpB;GAvBgB;;QACK,+IAAQ;;;KADb","debugId":null}}]
}