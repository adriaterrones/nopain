{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcnierga/proyectos/nopain/app/providers/ThemeProvider.tsx"],"sourcesContent":["'use client'\n\nimport { ThemeProvider as NextThemesProvider } from 'next-themes'\nimport { type ThemeProviderProps } from 'next-themes/dist/types'\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>\n}\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAKO,SAAS,cAAc,EAAE,QAAQ,EAAE,GAAG,OAA2B;IACtE,qBAAO,qQAAC,wLAAkB;QAAE,GAAG,KAAK;kBAAG;;;;;;AACzC","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcnierga/proyectos/nopain/app/components/ThemeToggle.tsx"],"sourcesContent":["'use client'\n\nimport { useTheme } from 'next-themes'\nimport { useEffect, useState } from 'react'\n\nexport function ThemeToggle() {\n  const { theme, setTheme } = useTheme()\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => setMounted(true), [])\n  if (!mounted) return null\n\n  return (\n    <button\n      onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}\n      className=\"rounded-full p-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 transition\"\n      title=\"Cambiar tema\"\n    >\n      {theme === 'dark' ? 'ðŸŒž' : 'ðŸŒ™'}\n    </button>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAKO,SAAS;IACd,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAA,mLAAQ;IACpC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,wOAAQ,EAAC;IAEvC,IAAA,yOAAS,EAAC,IAAM,WAAW,OAAO,EAAE;IACpC,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,qQAAC;QACC,SAAS,IAAM,SAAS,UAAU,SAAS,UAAU;QACrD,WAAU;QACV,OAAM;kBAEL,UAAU,SAAS,OAAO;;;;;;AAGjC","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcnierga/proyectos/nopain/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,6LAAO,EAAC,IAAA,oKAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcnierga/proyectos/nopain/components/ui/toast.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\n/* âœ… Viewport: centrado absoluto y sin expandirse */\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      // Vista completa, centrada horizontalmente\n      \"fixed top-6 inset-x-0 z-[100] flex justify-center p-4 pointer-events-none\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\n/* Estilos base */\nconst toastVariants = cva(\n  \"group relative flex items-center justify-between space-x-4 overflow-hidden rounded-lg border p-4 pr-6 shadow-lg transition-all \" +\n    \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-80 data-[state=open]:fade-in-80\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 border-gray-200 dark:border-gray-800\",\n        success: \"bg-green-600 text-white border-green-700\",\n        destructive: \"bg-red-600 text-white border-red-700\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\n/* âœ… Toast individual: ancho fijo y centrado */\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => (\n  <ToastPrimitives.Root\n    ref={ref}\n    className={cn(\n      toastVariants({ variant }),\n      \"pointer-events-auto max-w-[420px] w-auto mx-auto\",\n      className\n    )}\n    {...props}\n  />\n))\nToast.displayName = ToastPrimitives.Root.displayName\n\n/* Subcomponentes */\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-gray-700 dark:text-gray-300 opacity-0 transition-opacity hover:text-foreground \" +\n        \"focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    âœ•\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nexport {\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,gBAAgB,oMAAwB;AAE9C,kDAAkD,GAClD,MAAM,8BAAgB,0OAAgB,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qQAAC,oMAAwB;QACvB,KAAK;QACL,WAAW,IAAA,yIAAE,EACX,2CAA2C;QAC3C,6EACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,oMAAwB,CAAC,WAAW;AAEhE,gBAAgB,GAChB,MAAM,gBAAgB,IAAA,8LAAG,EACvB,oIACE,6HACF;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,SAAS;YACT,aAAa;QACf;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,6CAA6C,GAC7C,MAAM,sBAAQ,0OAAgB,CAI5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,qQAAC,gMAAoB;QACnB,KAAK;QACL,WAAW,IAAA,yIAAE,EACX,cAAc;YAAE;QAAQ,IACxB,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,gMAAoB,CAAC,WAAW;AAEpD,kBAAkB,GAClB,MAAM,2BAAa,0OAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qQAAC,iMAAqB;QACpB,KAAK;QACL,WAAW,IAAA,yIAAE,EAAC,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,iMAAqB,CAAC,WAAW;AAE1D,MAAM,iCAAmB,0OAAgB,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qQAAC,uMAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,yIAAE,EAAC,sBAAsB;QACnC,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,uMAA2B,CAAC,WAAW;AAEtE,MAAM,2BAAa,0OAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qQAAC,iMAAqB;QACpB,KAAK;QACL,WAAW,IAAA,yIAAE,EACX,+HACE,6EACF;QAEF,eAAY;QACX,GAAG,KAAK;kBACV;;;;;;AAIH,WAAW,WAAW,GAAG,iMAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcnierga/proyectos/nopain/components/ui/use-toast.ts"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: React.ReactNode\n  variant?: \"default\" | \"destructive\"\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\nconst listeners = new Set<(toasts: ToasterToast[]) => void>()\nlet toasts: ToasterToast[] = []\n\nfunction dispatch(action: { type: \"ADD\" | \"REMOVE\"; toast?: ToasterToast }) {\n  switch (action.type) {\n    case \"ADD\":\n      if (action.toast) {\n        toasts = [action.toast, ...toasts].slice(0, TOAST_LIMIT)\n        listeners.forEach((listener) => listener(toasts))\n      }\n      break\n    case \"REMOVE\":\n      if (action.toast) {\n        toasts = toasts.filter((t) => t.id !== action.toast!.id)\n        listeners.forEach((listener) => listener(toasts))\n      }\n      break\n  }\n}\n\nexport function useToast() {\n  const [state, setState] = React.useState<ToasterToast[]>(toasts)\n\n  React.useEffect(() => {\n    const listener = (newToasts: ToasterToast[]) => setState(newToasts)\n    listeners.add(listener)\n    return () => {\n      listeners.delete(listener)\n    }\n  }, [])\n\n  const toast = React.useCallback((toast: Omit<ToasterToast, \"id\">) => {\n    const id = Math.random().toString(36).substring(2, 9)\n    const newToast = { id, ...toast }\n    dispatch({ type: \"ADD\", toast: newToast })\n    toastTimeouts.set(\n      id,\n      setTimeout(() => dispatch({ type: \"REMOVE\", toast: newToast }), TOAST_REMOVE_DELAY)\n    )\n  }, [])\n\n  return { toasts: state, toast }\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;AAIA,MAAM,cAAc;AACpB,MAAM,qBAAqB;AAU3B,MAAM,gBAAgB,IAAI;AAC1B,MAAM,YAAY,IAAI;AACtB,IAAI,SAAyB,EAAE;AAE/B,SAAS,SAAS,MAAwD;IACxE,OAAQ,OAAO,IAAI;QACjB,KAAK;YACH,IAAI,OAAO,KAAK,EAAE;gBAChB,SAAS;oBAAC,OAAO,KAAK;uBAAK;iBAAO,CAAC,KAAK,CAAC,GAAG;gBAC5C,UAAU,OAAO,CAAC,CAAC,WAAa,SAAS;YAC3C;YACA;QACF,KAAK;YACH,IAAI,OAAO,KAAK,EAAE;gBAChB,SAAS,OAAO,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,OAAO,KAAK,CAAE,EAAE;gBACvD,UAAU,OAAO,CAAC,CAAC,WAAa,SAAS;YAC3C;YACA;IACJ;AACF;AAEO,SAAS;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,wOAAc,CAAiB;IAEzD,yOAAe,CAAC;QACd,MAAM,WAAW,CAAC,YAA8B,SAAS;QACzD,UAAU,GAAG,CAAC;QACd,OAAO;YACL,UAAU,MAAM,CAAC;QACnB;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,2OAAiB,CAAC,CAAC;QAC/B,MAAM,KAAK,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG;QACnD,MAAM,WAAW;YAAE;YAAI,GAAG,KAAK;QAAC;QAChC,SAAS;YAAE,MAAM;YAAO,OAAO;QAAS;QACxC,cAAc,GAAG,CACf,IACA,WAAW,IAAM,SAAS;gBAAE,MAAM;gBAAU,OAAO;YAAS,IAAI;IAEpE,GAAG,EAAE;IAEL,OAAO;QAAE,QAAQ;QAAO;IAAM;AAChC","debugId":null}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///Users/marcnierga/proyectos/nopain/components/ui/toaster.tsx"],"sourcesContent":["\"use client\"\n\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\nimport { useToast } from \"@/components/ui/use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AAQA;AAVA;;;;AAYO,SAAS;IACd,MAAM,EAAE,MAAM,EAAE,GAAG,IAAA,mKAAQ;IAE3B,qBACE,qQAAC,kKAAa;;YACX,OAAO,GAAG,CAAC,SAAU,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,GAAG,OAAO;gBAChE,qBACE,qQAAC,0JAAK;oBAAW,GAAG,KAAK;;sCACvB,qQAAC;4BAAI,WAAU;;gCACZ,uBAAS,qQAAC,+JAAU;8CAAE;;;;;;gCACtB,6BACC,qQAAC,qKAAgB;8CAAE;;;;;;;;;;;;wBAGtB;sCACD,qQAAC,+JAAU;;;;;;mBARD;;;;;YAWhB;0BAEA,qQAAC,kKAAa;;;;;;;;;;;AAGpB","debugId":null}}]
}